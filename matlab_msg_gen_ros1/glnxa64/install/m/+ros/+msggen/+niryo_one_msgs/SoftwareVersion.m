
classdef SoftwareVersion < ros.Message
    %SoftwareVersion MATLAB implementation of niryo_one_msgs/SoftwareVersion
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'niryo_one_msgs/SoftwareVersion' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '05cf59e59925f010abc41acd1944fec8' % The MD5 Checksum of the message definition
        PropertyList = { 'RpiImageVersion' 'RosNiryoOneVersion' 'MotorNames' 'StepperFirmwareVersions' } % List of non-constant message properties
        ROSPropertyList = { 'rpi_image_version' 'ros_niryo_one_version' 'motor_names' 'stepper_firmware_versions' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        RpiImageVersion
        RosNiryoOneVersion
        MotorNames
        StepperFirmwareVersions
    end
    methods
        function set.RpiImageVersion(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SoftwareVersion', 'RpiImageVersion');
            obj.RpiImageVersion = char(val);
        end
        function set.RosNiryoOneVersion(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SoftwareVersion', 'RosNiryoOneVersion');
            obj.RosNiryoOneVersion = char(val);
        end
        function set.MotorNames(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SoftwareVersion', 'MotorNames');
            obj.MotorNames = cell(val);
        end
        function set.StepperFirmwareVersions(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SoftwareVersion', 'StepperFirmwareVersions');
            obj.StepperFirmwareVersions = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.niryo_one_msgs.SoftwareVersion.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.niryo_one_msgs.SoftwareVersion;
            obj.reload(strObj);
        end
    end
end
