
classdef Sequence < ros.Message
    %Sequence MATLAB implementation of niryo_one_msgs/Sequence
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'niryo_one_msgs/Sequence' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'f6a77265c058342138b72e566370ac7a' % The MD5 Checksum of the message definition
        PropertyList = { 'Id' 'Name' 'Description' 'Created' 'Updated' 'BlocklyXml' 'PythonCode' } % List of non-constant message properties
        ROSPropertyList = { 'id' 'name' 'description' 'created' 'updated' 'blockly_xml' 'python_code' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Id
        Name
        Description
        Created
        Updated
        BlocklyXml
        PythonCode
    end
    methods
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sequence', 'Id');
            obj.Id = int32(val);
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Sequence', 'Name');
            obj.Name = char(val);
        end
        function set.Description(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Sequence', 'Description');
            obj.Description = char(val);
        end
        function set.Created(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sequence', 'Created');
            obj.Created = int32(val);
        end
        function set.Updated(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sequence', 'Updated');
            obj.Updated = int32(val);
        end
        function set.BlocklyXml(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Sequence', 'BlocklyXml');
            obj.BlocklyXml = char(val);
        end
        function set.PythonCode(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Sequence', 'PythonCode');
            obj.PythonCode = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.niryo_one_msgs.Sequence.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.niryo_one_msgs.Sequence;
            obj.reload(strObj);
        end
    end
end
