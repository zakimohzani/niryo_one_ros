
classdef Trajectory < ros.Message
    %Trajectory MATLAB implementation of niryo_one_msgs/Trajectory
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'niryo_one_msgs/Trajectory' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'aade6f7a0bc0f9971f6efad1985ca843' % The MD5 Checksum of the message definition
        PropertyList = { 'TrajectoryPlan' 'Id' 'Name' 'Description' } % List of non-constant message properties
        ROSPropertyList = { 'trajectory_plan' 'id' 'name' 'description' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.niryo_one_msgs.TrajectoryPlan' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        TrajectoryPlan
        Id
        Name
        Description
    end
    methods
        function set.TrajectoryPlan(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.niryo_one_msgs.TrajectoryPlan'};
            validateattributes(val, validClasses, validAttributes, 'Trajectory', 'TrajectoryPlan')
            obj.TrajectoryPlan = val;
        end
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Trajectory', 'Id');
            obj.Id = int32(val);
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Trajectory', 'Name');
            obj.Name = char(val);
        end
        function set.Description(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Trajectory', 'Description');
            obj.Description = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.niryo_one_msgs.Trajectory.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.niryo_one_msgs.Trajectory;
            obj.reload(strObj);
        end
    end
end
