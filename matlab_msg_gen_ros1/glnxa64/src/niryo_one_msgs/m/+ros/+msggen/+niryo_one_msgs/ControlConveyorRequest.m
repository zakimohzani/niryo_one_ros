
classdef ControlConveyorRequest < ros.Message
    %ControlConveyorRequest MATLAB implementation of niryo_one_msgs/ControlConveyorRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'niryo_one_msgs/ControlConveyorRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '8fb87fdef4900df86881316e047822d2' % The MD5 Checksum of the message definition
        PropertyList = { 'Id' 'ControlOn' 'Speed' 'Direction' } % List of non-constant message properties
        ROSPropertyList = { 'id' 'control_on' 'speed' 'direction' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Id
        ControlOn
        Speed
        Direction
    end
    methods
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ControlConveyorRequest', 'Id');
            obj.Id = uint8(val);
        end
        function set.ControlOn(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ControlConveyorRequest', 'ControlOn');
            obj.ControlOn = logical(val);
        end
        function set.Speed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ControlConveyorRequest', 'Speed');
            obj.Speed = int16(val);
        end
        function set.Direction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ControlConveyorRequest', 'Direction');
            obj.Direction = int8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.niryo_one_msgs.ControlConveyorRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.niryo_one_msgs.ControlConveyorRequest;
            obj.reload(strObj);
        end
    end
end
